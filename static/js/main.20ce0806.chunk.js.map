{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Header.js","components/SearchForm.js","components/FirstRow.js","components/EmployeeGrid.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","children","Row","Col","size","Header","SearchForm","type","name","aria-describedby","placeholder","onChange","handleFilterEmployee","value","id","onClick","revertState","FirstRow","style","textAlign","color","sortName","sortAge","EmployeeGrid","alt","firstName","src","thumbnail","lastName","phone","email","age","axios","get","App","state","employees","search","sortedAge","sortedName","isFiltered","initialEmployees","handleRevertState","event","preventDefault","setState","getEmployees","API","then","res","data","results","catch","err","console","log","empName","target","filteredEmp","filter","emp","first","toLowerCase","includes","isfiltered","sortByName","sort","a","b","localeCompare","sortByAge","dob","this","map","picture","last","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20ce0806.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container empContainer\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={\"row\"}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  //const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={props.size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Welcome to your Employee Directory</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction SearchForm(props) {\nreturn (\n    <form className=\"input-group mb-3 searchForm\">\n        <input type=\"text\" name=\"search\" className=\"form-control\" aria-describedby=\"resetBtn\" placeholder=\"Enter Employee's First Name\" onChange={props.handleFilterEmployee} value={props.value}></input>\n        <button type =\"submit\" className=\"btn btn-primary\" id=\"resetBtn\" onClick={props.revertState}>Reset Table</button>\n    </form>\n)\n}\n\nexport default SearchForm;","import Row from \"./Row\";\nimport Col from \"./Col\";\n\nfunction FirstRow(props) {\n  const style = {\n    tips: {\n      textAlign: \"center\",\n      color: \"rgb(2, 117, 216)\"\n    },\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={style.tips}>\n        <h4>*Tips:</h4>\n        <h6>Click \"Name\" To Toggle Sorting Employees Alphabetically in Ascending and Descending Order</h6>\n        <h6>Click \"Age\" To Toggle Sorting Employees by Age in Ascending and Descending Order</h6>\n      </div>\n      <br></br>\n      <br></br>\n      <Row>\n        <Col size=\"col-md-2\">\n          <p>\n            <strong>Image</strong>\n          </p>\n        </Col>\n        <Col size=\"col-md-2\">\n          <p onClick={props.sortName} className=\"rowHead\">\n            <strong>Name</strong>\n          </p>\n        </Col>\n        <Col size=\"col-md-2\">\n          <p>\n            <strong>Phone</strong>\n          </p>\n        </Col>\n        <Col size=\"col-md-4\">\n          <p>\n            <strong>Email</strong>\n          </p>\n        </Col>\n        <Col size=\"col-md-2\">\n          <p onClick={props.sortAge} className=\"rowHead\">\n            <strong>Age</strong>\n          </p>\n        </Col>\n        <hr></hr>\n      </Row>\n    </>\n  );\n}\n\nexport default FirstRow;\n","import Row from \"./Row\";\nimport Col from \"./Col\";\n\nfunction EmployeeGrid(props) {\n  return (\n    <Row>\n      <Col size=\"col-md-2\">\n        <img\n          className=\"thumbnail\"\n          alt={props.firstName}\n          src={props.thumbnail}\n        ></img>\n      </Col>\n      <Col size=\"col-md-2\">\n        <p>\n          {props.firstName} {props.lastName}\n        </p>\n      </Col>\n      <Col size=\"col-md-2\">\n        <p>{props.phone}</p>\n      </Col>\n      <Col size=\"col-md-4\">\n        <p>{props.email}</p>\n      </Col>\n      <Col size=\"col-md-2\">\n        <p>{props.age}</p>\n      </Col>\n      <hr></hr>\n    </Row>\n  );\n}\n\nexport default EmployeeGrid;\n","import axios from \"axios\";\n\nexport default {\n  search: function() {\n    return axios.get(\"https://randomuser.me/api/?results=15&nat=us\");\n  }\n};\n","import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row\";\nimport Col from \"./components/Col\";\nimport Header from \"./components/Header\";\nimport SearchForm from \"./components/SearchForm\";\nimport FirstRow from \"./components/FirstRow\";\nimport EmployeeGrid from \"./components/EmployeeGrid\";\nimport API from \"./utils/API\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n\n  state = {\n    employees: [],\n    search: \"\",\n    sortedAge: false,\n    sortedName: false,\n    isFiltered: false,\n    initialEmployees: [],\n  };\n\n  handleRevertState = (event) => {\n    event.preventDefault();\n    \n   this.setState({employees: this.state.initialEmployees, search: \"\"});\n  }\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  getEmployees = () => {\n    API.search()\n      .then((res) => {\n        this.setState({ employees: res.data.results, initialEmployees: res.data.results });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleFilterEmployee = (event) => {\n    event.preventDefault();\n    \n    //const name = event.target.name;\n    const empName = event.target.value;\n    const filteredEmp = this.state.employees.filter(emp => emp.name.first.toLowerCase().includes(empName.toLowerCase()));\n    //this works dynamically and shit, but how to revert back to the OG emp list?\n    this.setState({\n        employees: filteredEmp,\n        search: empName,\n        isfiltered: true,\n    });\n  };\n\n  sortByName = () => {\n    this.state.sortedName\n      ? this.setState({\n          employees: this.state.employees.sort((a, b) =>\n            b.name.first.localeCompare(a.name.first)\n          ),\n          sortedName: false,\n        })\n      : this.setState({\n          employees: this.state.employees.sort((a, b) =>\n            a.name.first.localeCompare(b.name.first)\n          ),\n          sortedName: true,\n        });\n  };\n\n  sortByAge = () => {\n    this.state.sortedAge\n      ? this.setState({\n          employees: this.state.employees.sort(function (a, b) {\n            return b.dob.age - a.dob.age;\n          }),\n          sortedAge: false,\n        })\n      : this.setState({\n          employees: this.state.employees.sort(function (a, b) {\n            return a.dob.age - b.dob.age;\n          }),\n          sortedAge: true,\n        });\n  };\n\n  render() {\n    const { employees, search } = this.state;\n\n    return (\n      <>\n        <Header />\n\n        <Container>\n          <Row>\n            <Col size=\"col-md-12\">\n              <SearchForm\n                value={search}\n                handleFilterEmployee={this.handleFilterEmployee}\n                revertState={this.handleRevertState}\n              />\n            </Col>\n          </Row>\n          <br></br>\n          <FirstRow sortName={this.sortByName} sortAge={this.sortByAge} />\n          \n          {employees.map((emp) => (\n            <EmployeeGrid\n              thumbnail={emp.picture.thumbnail}\n              firstName={emp.name.first}\n              lastName={emp.name.last}\n              phone={emp.phone}\n              email={emp.email}\n              age={emp.dob.age}\n            />\n          ))}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}